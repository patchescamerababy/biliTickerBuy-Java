name: Java Build and Release

on:
  push:
    branches: [ main ]     
    paths:
      - 'src/main/java/**'
      - '.github/workflows/maven-publish.yml'
  pull_request:
    paths:
      - 'src/main/java/**'
      - '.github/workflows/maven-publish.yml'

permissions:
  contents: write
  packages: write

jobs:
  build:
    name: Build (${{ matrix.label }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            arch: amd64
            label: linux-amd64
            artifact_name: biliTickerBuy-Linux-x86_64
          - os: ubuntu-latest
            arch: arm64
            label: linux-arm64
            artifact_name: biliTickerBuy-Linux-aarch64
          - os: windows-latest
            arch: amd64
            label: windows-amd64
            artifact_name: biliTickerBuy-Windows-x86_64
          - os: macos-latest
            arch: amd64
            label: macos-amd64
            artifact_name: biliTickerBuy-macOS-x86_64
          - os: macos-14
            arch: arm64
            label: macos-arm64
            artifact_name: biliTickerBuy-macOS-aarch64

    steps:
      - uses: actions/checkout@v4

      - name: Generate build info (date + commit)
        id: build_info
        run: |
          echo "date=$(date +'%Y%m%d')" >> $GITHUB_OUTPUT
          echo "build_id=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Setup GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: '21'
          distribution: 'graalvm'
          architecture: ${{ matrix.arch }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build with Maven
        run: mvn -B clean package --file pom.xml

      - name: Show target directory (debug)
        run: ls -R target

      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}-${{ steps.build_info.outputs.date }}-${{ steps.build_info.outputs.build_id }}
          # 兼容常见 Shade/Assembly 命名：*-jar-with-dependencies.jar、*-all.jar，或者默认 *.jar
          path: |
            target/*-jar-with-dependencies.jar
            target/*-all.jar
            target/*.jar
          retention-days: 5


  release:
    name: Release (${{ matrix.label }})
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - label: linux-amd64
            artifact_name: biliTickerBuy-Linux-x86_64
          - label: linux-arm64
            artifact_name: biliTickerBuy-Linux-aarch64
          - label: windows-amd64
            artifact_name: biliTickerBuy-Windows-x86_64
          - label: macos-amd64
            artifact_name: biliTickerBuy-macOS-x86_64
          - label: macos-arm64
            artifact_name: biliTickerBuy-macOS-aarch64

    steps:
      - uses: actions/checkout@v4

      - name: Generate date & commit
        id: rel_info
        run: |
          echo "date=$(date +'%Y%m%d')" >> $GITHUB_OUTPUT
          echo "build_id=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Download artifact for ${{ matrix.label }}
        uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}-${{ steps.rel_info.outputs.date }}-${{ steps.rel_info.outputs.build_id }}
          path: artifact

      - name: Rename jar for release
        run: |
          mkdir -p release
          jar=$(ls artifact/*.jar | head -n1)
          new_name="v-${{ steps.rel_info.outputs.date }}-${{ matrix.label }}.jar"
          echo "Renaming $jar -> release/$new_name"
          mv "$jar" "release/$new_name"
          echo "Prepared files:"
          ls -l release

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v-${{ steps.rel_info.outputs.date }}-${{ matrix.label }}
          name: Release ${{ steps.rel_info.outputs.date }}‑${{ matrix.label }}
          files: release/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
